package com.example.demoS.entity;
// Generated Jun 15, 2022, 11:29:00 AM by Hibernate Tools 3.6.2.Final


import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * FreelancerAccount generated by hbm2java
 */
@Entity
@Table(name = "FreelancerAccount")
public class FreelancerAccount  {

	private long id;
	private UserAccount userAccount;
	private String overview;
	private Set<Skill> skills = new HashSet<Skill>(0);
	private Set<Tag> tags = new HashSet<Tag>(0);
	private Set<Transactions> transactionses = new HashSet<Transactions>(0);
	private Set<Report> reports = new HashSet<Report>(0);
	private Set<Apply> applies = new HashSet<Apply>(0);

	public FreelancerAccount() {
	}

	public FreelancerAccount(long id, UserAccount userAccount) {
		this.id = id;
		this.userAccount = userAccount;
	}

	public FreelancerAccount(long id, UserAccount userAccount, String overview, Set<Skill> skills, Set<Tag> tags,
			Set<Transactions> transactionses, Set<Report> reports, Set<Apply> applies) {
		this.id = id;
		this.userAccount = userAccount;
		this.overview = overview;
		this.skills = skills;
		this.tags = tags;
		this.transactionses = transactionses;
		this.reports = reports;
		this.applies = applies;
	}

	@Id

	@Column(name = "ID", unique = true, nullable = false)
	public long getId() {
		return this.id;
	}

	public void setId(long id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "UserID", nullable = false)
	public UserAccount getUserAccount() {
		return this.userAccount;
	}

	public void setUserAccount(UserAccount userAccount) {
		this.userAccount = userAccount;
	}

	@Column(name = "Overview")
	public String getOverview() {
		return this.overview;
	}

	public void setOverview(String overview) {
		this.overview = overview;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "freelancerAccount")
	public Set<Skill> getSkills() {
		return this.skills;
	}

	public void setSkills(Set<Skill> skills) {
		this.skills = skills;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "freelancerAccount")
	public Set<Tag> getTags() {
		return this.tags;
	}

	public void setTags(Set<Tag> tags) {
		this.tags = tags;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "freelancerAccount")
	public Set<Transactions> getTransactionses() {
		return this.transactionses;
	}

	public void setTransactionses(Set<Transactions> transactionses) {
		this.transactionses = transactionses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "freelancerAccount")
	public Set<Report> getReports() {
		return this.reports;
	}

	public void setReports(Set<Report> reports) {
		this.reports = reports;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "freelancerAccount")
	public Set<Apply> getApplies() {
		return this.applies;
	}

	public void setApplies(Set<Apply> applies) {
		this.applies = applies;
	}

}

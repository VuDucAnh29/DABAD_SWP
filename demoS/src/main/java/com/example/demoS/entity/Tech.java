package com.example.demoS.entity;
// Generated Jun 15, 2022, 11:29:00 AM by Hibernate Tools 3.6.2.Final

import java.io.Serializable;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Tech generated by hbm2java
 */
@Entity
@Table(name = "Tech")
public class Tech  {

	private long id;
	private Field field;
	private Serializable name;
	private Serializable description;
	private Set<Tag> tags = new HashSet<Tag>(0);
	private Set<Skill> skills = new HashSet<Skill>(0);

	public Tech() {
	}

	public Tech(long id, Serializable name, Serializable description) {
		this.id = id;
		this.name = name;
		this.description = description;
	}

	public Tech(int id, Field field, Serializable name, Serializable description, Set<Tag> tags, Set<Skill> skills) {
		this.id = id;
		this.field = field;
		this.name = name;
		this.description = description;
		this.tags = tags;
		this.skills = skills;
	}

	@Id

	@Column(name = "ID", unique = true, nullable = false)
	public long getId() {
		return this.id;
	}

	public void setId(long id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "FieldID")
	public Field getField() {
		return this.field;
	}

	public void setField(Field field) {
		this.field = field;
	}

	@Column(name = "Name", nullable = false)
	public Serializable getName() {
		return this.name;
	}

	public void setName(Serializable name) {
		this.name = name;
	}

	@Column(name = "Description", nullable = false)
	public Serializable getDescription() {
		return this.description;
	}

	public void setDescription(Serializable description) {
		this.description = description;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "tech")
	public Set<Tag> getTags() {
		return this.tags;
	}

	public void setTags(Set<Tag> tags) {
		this.tags = tags;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "tech")
	public Set<Skill> getSkills() {
		return this.skills;
	}

	public void setSkills(Set<Skill> skills) {
		this.skills = skills;
	}

}

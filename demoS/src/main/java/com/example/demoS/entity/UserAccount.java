package com.example.demoS.entity;
// Generated Jun 15, 2022, 11:29:00 AM by Hibernate Tools 3.6.2.Final


import java.util.HashSet;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.OneToMany;
import javax.persistence.Table;


/**
 * UserAccount generated by hbm2java
 */
@Entity
@Table(name = "UserAccount")
public class UserAccount {

	private long id;
	private String email;
	private String password;
	private String fullName;
	private String avatar;
	private Set<Role> roles = new HashSet<>(0);
	private String createDate;
	private String updateDate;
	private double balance;
	private int status;
	private Set<FreelancerAccount> freelancerAccounts = new HashSet<FreelancerAccount>(0);
	private Set<CustomerAccount> customerAccounts = new HashSet<CustomerAccount>(0);

	public UserAccount() {
	}

	public UserAccount(long id, String email, String password, String fullName, Set<Role> roleId, double balance,
			int status) {
		this.id = id;
		this.email = email;
		this.password = password;
		this.fullName = fullName;
		this.roles = roleId;
		this.balance = balance;
		this.status = status;
	}

	public UserAccount(long id, String email, String password, String fullName, String avatar, Set<Role> roleId,
			String createDate, String updateDate, double balance, int status, Set<FreelancerAccount> freelancerAccounts,
			Set<CustomerAccount> customerAccounts) {
		this.id = id;
		this.email = email;
		this.password = password;
		this.fullName = fullName;
		this.avatar = avatar;
		this.roles = roleId;
		this.createDate = createDate;
		this.updateDate = updateDate;
		this.balance = balance;
		this.status = status;
		this.freelancerAccounts = freelancerAccounts;
		this.customerAccounts = customerAccounts;
	}

	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)
//	@Column(name = "ID", unique = true, nullable = false)
	public long getId() {
		return this.id;
	}

	public void setId(long id) {
		this.id = id;
	}

	@Column(name = "Email", nullable = false, length = 128,  unique = true)
	public String getEmail() {
		return this.email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	@Column(name = "Password")
	public String getPassword() {
		return this.password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	@Column(name = "FullName", nullable = false)
	public String getFullName() {
		return this.fullName;
	}

	public void setFullName(String fullName) {
		this.fullName = fullName;
	}

	@Column(name = "Avatar", length = 128)
	public String getAvatar() {
		return this.avatar;
	}

	public void setAvatar(String avatar) {
		this.avatar = avatar;
	}

	@ManyToMany(cascade = CascadeType.ALL, fetch = FetchType.EAGER)
    @JoinTable(
            name = "users_roles",
            joinColumns = @JoinColumn(name = "user_id"),
            inverseJoinColumns = @JoinColumn(name = "role_id")
            )
	public Set<Role> getRoles() {
		return this.roles;
	}

	public void setRoles(Set<Role> roles) {
		this.roles = roles;
	}


	@Column(name = "CreateDate", length = 10)
	public String getCreateDate() {
		return this.createDate;
	}

	public void setCreateDate(String createDate) {
		this.createDate = createDate;
	}


	@Column(name = "UpdateDate", length = 10)
	public String getUpdateDate() {
		return this.updateDate;
	}

	public void setUpdateDate(String updateDate) {
		this.updateDate = updateDate;
	}

	@Column(name = "Balance", nullable = false, precision = 53, scale = 0)
	public double getBalance() {
		return this.balance;
	}

	public void setBalance(double balance) {
		this.balance = balance;
	}

	@Column(name = "Status", nullable = false)
	public int getStatus() {
		return this.status;
	}

	public void setStatus(int status) {
		this.status = status;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "userAccount")
	public Set<FreelancerAccount> getFreelancerAccounts() {
		return this.freelancerAccounts;
	}

	public void setFreelancerAccounts(Set<FreelancerAccount> freelancerAccounts) {
		this.freelancerAccounts = freelancerAccounts;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "userAccount")
	public Set<CustomerAccount> getCustomerAccounts() {
		return this.customerAccounts;
	}

	public void setCustomerAccounts(Set<CustomerAccount> customerAccounts) {
		this.customerAccounts = customerAccounts;
	}

}
